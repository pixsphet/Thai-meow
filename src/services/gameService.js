import AsyncStorage from '@react-native-async-storage/async-storage';

/**
 * Game Service
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î
 */
class GameService {
  constructor() {
    this.storageKey = 'user_games';
  }

  /**
   * ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô service
   */
  async initialize() {
    try {
      console.log('üéÆ Game service initialized');
    } catch (error) {
      console.error('‚ùå Error initializing game service:', error);
    }
  }

  /**
   * ‡∏î‡∏∂‡∏á‡πÄ‡∏Å‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   */
  async getAllGames() {
    try {
      const localData = await AsyncStorage.getItem(this.storageKey);
      if (localData) {
        return JSON.parse(localData);
      }
      
      // Mock data
      return this.getMockGames();
    } catch (error) {
      console.error('‚ùå Error getting games:', error);
      return [];
    }
  }

  /**
   * Mock games ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
   */
  getMockGames() {
    return [
      {
        id: 'game_1',
        title: '‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå',
        type: 'matching',
        level: 'beginner',
        description: '‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏ó‡∏¢-‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©',
        progress: 0,
        completed: false,
        unlocked: true
      },
      {
        id: 'game_2',
        title: '‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏≥‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á',
        type: 'fill_blank',
        level: 'beginner',
        description: '‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ',
        progress: 0,
        completed: false,
        unlocked: false
      }
    ];
  }

  /**
   * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏°
   */
  async updateGameProgress(gameId, progressData) {
    try {
      console.log('üìù Updating game progress:', gameId, progressData);
      return { success: true };
    } catch (error) {
      console.error('‚ùå Error updating game progress:', error);
      throw error;
    }
  }
}

// Export singleton instance
export default new GameService();
